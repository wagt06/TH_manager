<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAEAQAAAJNU0Z0AUkBTAMBAQAB
        CAEAAQgBAAEUAQABFAEABP8BEQEACP8BQgFNATYHAAE2AwABKAMAAVADAAEUAwABAQEAARAFAAGAAQy4
        AAG9AXcBtQFeAbUBXgG1AV4BtQFeAbUBXgG1AV4BtQFeAbUBXgG1AV4BtQFeAbUBXgG1AV4BnAFvAd4B
        e4IAAVoBbwHGATABxgEwAcYBMAHGATABxgEwAcYBMAHGATABxgEwAcYBMAHGATABxgEwAcYBMAE6AWMB
        3gF3ggABewFzAUoBPQHGATABxgEwAcYBMAHnATABCAEtAQgBLQFLATEB6AEwAcYBMAHnATABSwExAVoB
        bwHeAXuCAAHeAXsBOQFrAcYBMAHGATABxgEwAWsBKQFzARoBcwEaAR0BLwHQATEBxgEwAUsBMQE/ATMB
        3wF7hAAB/wF/Ad4BdwFaAV8BSgE5ASwBGQHLATEBYwFqAWMBagGSAT4BuAEyAboBMgEbAUcB3wF7Af8B
        f4YAAf8BfwHeAXcBewFvAdgBVgGOAVoBYAF+AWABfgJmATYBYwGeAWMB3gFzkAABvQF3ATIBdwGlAX4B
        pQF+AWUBfgFWAXsB3gF7kAAB/wF/AbwBdwF0AXsBLAF/ASwBfwGsAX4BeQF7Af8Bf5AAAf8BfwGUAX8B
        LAF/ASwBfwEsAX8BLAF/ASwBfwGXAXuQAAF1AX8BTgF/ASwBfwEsAX8BLAF/ASwBfwEsAX8BlwF7jAAB
        /wF/Ab0BdwHuAXIBCwFzASwBdwEsAX8BLAF/AWkBZgHLAXIBMAF/AXgBe4oAAf8BfwG9AXcBrgFiAesB
        agEsAXcBLAF/ASwBfwFpAWYBywFyAewBegHyAXKOAAGyAVYBjAFeAe0BdgEMAX8BLAF/ASwBfwEMAXsB
        0AFmAfgBXo4AAe8BPQGMATEBDgFWAYwBfgEsAX8BLAF/AawBYgGxAVYBWgFrjgABUgJKAykBSQE1AWkB
        NQHLAT0BigExAVEBSgHeAXuOAAGcAXMBMQFGAQgBIQEIASEBCAEhAUoBKQEQAUIBOQFnAd4Be5AAAXsB
        bwFzAU4BEAFCARABQgFSAUoBWgFrAd4Be5QAAd4BewG9AXcBnAFzAd4BewHeAXv/ACcAAUIBTQE+BwAB
        PgMAASgDAAFQAwABFAMAAQEBAAEBBQAB8BcAA/8BAAL/AfAJAAHgAQABMAkAAeABAAEwCQAB4AEAATAJ
        AAHgAQABcAkAAeABAAFwCQAB8AEBAfAJAAH+AQMB8AkAAfwBAwHwCQAB/AEDAfAJAAH8AQMB8AkAAfAB
        AQHwCQAB8AEBAfAJAAH8AQEB8AkAAfwBAQHwCQAB/AEBAfAJAAH8AQEB8AkAAf4BAwHwCQAB/wEHAfAJ
        AAL/AfAJAAs=
</value>
  </data>
</root>