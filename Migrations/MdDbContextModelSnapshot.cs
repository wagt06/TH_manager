// <auto-generated />
using System;
using MD;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MD.Migrations
{
    [DbContext(typeof(MdDbContext))]
    partial class MdDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MD.Cto.CtoMarcacionesReporte", b =>
                {
                    b.Property<int>("CantidadHorasFinal")
                        .HasColumnType("int");

                    b.Property<int>("CodigoEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("CodigoSucursal")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Entrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("HorasJustificadas")
                        .HasColumnType("int");

                    b.Property<int>("HorasMarcadas")
                        .HasColumnType("int");

                    b.Property<int>("HorasReglamentarias")
                        .HasColumnType("int");

                    b.Property<string>("NombreEmpleado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Salida")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sucursal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TiempoAFavor")
                        .HasColumnType("int");

                    b.Property<int>("TiempoEnContra")
                        .HasColumnType("int");

                    b.ToTable("CtoMarcacionesReporte");
                });

            modelBuilder.Entity("MD.Entidades.Empleado", b =>
                {
                    b.Property<int>("CodigoEmpleado")
                        .HasColumnType("int");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CodigoHorario")
                        .HasColumnType("int");

                    b.Property<int>("CodigoSucursal")
                        .HasColumnType("int");

                    b.Property<int>("CodigoUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("CodigoUsuarioElimina")
                        .HasColumnType("int");

                    b.Property<int?>("CodigoUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaMod")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivo")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEliminado")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsuario")
                        .HasColumnType("bit");

                    b.Property<string>("NombreEmpleado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CodigoEmpleado");

                    b.HasIndex("CodigoHorario");

                    b.HasIndex("CodigoSucursal");

                    b.ToTable("Empleado");

                    b.HasData(
                        new
                        {
                            CodigoEmpleado = 1,
                            Cedula = "",
                            CodigoHorario = 1,
                            CodigoSucursal = 1,
                            CodigoUsuarioCreacion = 1,
                            Contraseña = "123",
                            FechaCreacion = new DateTime(2024, 9, 4, 23, 36, 33, 914, DateTimeKind.Local).AddTicks(5915),
                            IsActivo = true,
                            IsEliminado = false,
                            IsUsuario = true,
                            NombreEmpleado = "Admin",
                            Usuario = "admin"
                        });
                });

            modelBuilder.Entity("MD.Entidades.Horario", b =>
                {
                    b.Property<int>("CodigoHorario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodigoHorario"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Inicia")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Termina")
                        .HasColumnType("datetime2");

                    b.HasKey("CodigoHorario");

                    b.ToTable("Horario");

                    b.HasData(
                        new
                        {
                            CodigoHorario = 1,
                            Descripcion = "Manana",
                            Inicia = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActivo = true,
                            Termina = new DateTime(1, 1, 1, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CodigoHorario = 2,
                            Descripcion = "Tarde",
                            Inicia = new DateTime(1, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActivo = true,
                            Termina = new DateTime(1, 1, 1, 19, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MD.Entidades.Justificacion", b =>
                {
                    b.Property<int>("CodigoJustificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodigoJustificacion"));

                    b.Property<int>("CodigoEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("CodigoEstado")
                        .HasColumnType("int");

                    b.Property<int>("CodigoTipoJustificacion")
                        .HasColumnType("int");

                    b.Property<int>("CodigoUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("CodigoUsuarioElimina")
                        .HasColumnType("int");

                    b.Property<int?>("CodigoUsuarioMod")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaMod")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraInicial")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Horas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("IsEliminado")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFeriado")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPermiso")
                        .HasColumnType("bit");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodigoJustificacion");

                    b.HasIndex("CodigoEmpleado");

                    b.HasIndex("CodigoTipoJustificacion");

                    b.ToTable("Justificacion");
                });

            modelBuilder.Entity("MD.Entidades.Marcacion", b =>
                {
                    b.Property<int>("IdMarcacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMarcacion"));

                    b.Property<int>("CodigoEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("CodigoSucursal")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("IdMarcacion");

                    b.HasIndex("CodigoEmpleado");

                    b.HasIndex("CodigoSucursal");

                    b.ToTable("Marcacion");
                });

            modelBuilder.Entity("MD.Entidades.Sucursal", b =>
                {
                    b.Property<int>("CodigoSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodigoSucursal"));

                    b.Property<int>("CodigoUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("CodigoUsuarioElimina")
                        .HasColumnType("int");

                    b.Property<int?>("CodigoUsuarioMod")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaMod")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivo")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CodigoSucursal");

                    b.ToTable("Sucursal");

                    b.HasData(
                        new
                        {
                            CodigoSucursal = 1,
                            CodigoUsuarioCreacion = 1,
                            FechaCreacion = new DateTime(2024, 9, 4, 23, 36, 33, 914, DateTimeKind.Local).AddTicks(5866),
                            IsActivo = true,
                            IsEliminado = false,
                            Nombre = "Linda Vista"
                        },
                        new
                        {
                            CodigoSucursal = 2,
                            CodigoUsuarioCreacion = 1,
                            FechaCreacion = new DateTime(2024, 9, 4, 23, 36, 33, 914, DateTimeKind.Local).AddTicks(5879),
                            IsActivo = true,
                            IsEliminado = false,
                            Nombre = "Metrocentro"
                        });
                });

            modelBuilder.Entity("MD.Entidades.TipoJustificacion", b =>
                {
                    b.Property<int>("CodigoTipoJustificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodigoTipoJustificacion"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActiva")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFeriado")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSalida")
                        .HasColumnType("bit");

                    b.HasKey("CodigoTipoJustificacion");

                    b.ToTable("TipoJustificacion");

                    b.HasData(
                        new
                        {
                            CodigoTipoJustificacion = 1,
                            Descripcion = "Dia Vacaciones",
                            IsActiva = true,
                            IsFeriado = false,
                            IsSalida = true
                        },
                        new
                        {
                            CodigoTipoJustificacion = 2,
                            Descripcion = "Horas Libre",
                            IsActiva = true,
                            IsFeriado = false,
                            IsSalida = true
                        },
                        new
                        {
                            CodigoTipoJustificacion = 3,
                            Descripcion = "Dia Feriado",
                            IsActiva = true,
                            IsFeriado = false,
                            IsSalida = true
                        },
                        new
                        {
                            CodigoTipoJustificacion = 4,
                            Descripcion = "Horas Extras",
                            IsActiva = true,
                            IsFeriado = false,
                            IsSalida = false
                        });
                });

            modelBuilder.Entity("MD.Entidades.Empleado", b =>
                {
                    b.HasOne("MD.Entidades.Horario", "Horario")
                        .WithMany("Empleados")
                        .HasForeignKey("CodigoHorario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MD.Entidades.Sucursal", "Sucursal")
                        .WithMany("Empleados")
                        .HasForeignKey("CodigoSucursal")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Horario");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("MD.Entidades.Justificacion", b =>
                {
                    b.HasOne("MD.Entidades.Empleado", "Empleado")
                        .WithMany("Justificaciones")
                        .HasForeignKey("CodigoEmpleado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MD.Entidades.TipoJustificacion", "TipoJustificacion")
                        .WithMany("Justificaciones")
                        .HasForeignKey("CodigoTipoJustificacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("TipoJustificacion");
                });

            modelBuilder.Entity("MD.Entidades.Marcacion", b =>
                {
                    b.HasOne("MD.Entidades.Empleado", "Empleado")
                        .WithMany("Marcaciones")
                        .HasForeignKey("CodigoEmpleado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MD.Entidades.Sucursal", "Sucursal")
                        .WithMany("Marcaciones")
                        .HasForeignKey("CodigoSucursal")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("MD.Entidades.Empleado", b =>
                {
                    b.Navigation("Justificaciones");

                    b.Navigation("Marcaciones");
                });

            modelBuilder.Entity("MD.Entidades.Horario", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("MD.Entidades.Sucursal", b =>
                {
                    b.Navigation("Empleados");

                    b.Navigation("Marcaciones");
                });

            modelBuilder.Entity("MD.Entidades.TipoJustificacion", b =>
                {
                    b.Navigation("Justificaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
